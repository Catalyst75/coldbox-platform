/*********************************************************************************** Copyright Since 2005 ColdBox Framework by Luis Majano and Ortus Solutions, Corp* www.coldbox.org | www.luismajano.com | www.ortussolutions.com********************************************************************************* Base class for all event handlers* @author Luis Majano <lmajano@ortussolutions.com>*/component extends="coldbox.system.FrameworkSupertype" serializable="false" accessors="true"{	// event cache suffix	this.event_cache_suffix 	= "";	// pre handler only except lists	this.prehandler_only 		= "";	this.prehandler_except 		= "";	// post handler only except lists	this.posthandler_only 		= "";	this.posthandler_except 	= "";	// around handler only except lists	this.aroundhandler_only 	= "";	this.aroundHandler_except 	= "";	// HTTP allowed methods	this.allowedMethods = structnew();		/**	* Action exists	* @action.hint The action to verify that it exists	*/	boolean function _actionExists( required action ){		return ( structKeyExists( this, arguments.action ) OR structKeyExists( variables, arguments.action ) );	}		/**	* _privateInvoker for private events	* @method.hint The method to execute	* @argCollection.hint The arguments to execute the method with.	*/	any function _privateInvoker( required method, required argCollection ){		var action = variables[ arguments.method ];		var results = action(argumentCollection=argCollection);		if( !isNull( results ) ){ return results; }	}	}